{
	"name": "df_municipios_ibge_sink_table",
	"properties": {
		"description": "Municios com total de casos e óbitos.\nCod_IBGA,  Dados-covid-19-municipios.csv",
		"folder": {
			"name": "covid_sp"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_csv_iso_format_generico",
						"type": "DatasetReference"
					},
					"name": "MunicpiosIBGE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_generico_azuresql",
						"type": "DatasetReference"
					},
					"name": "SinkToDatabase"
				}
			],
			"transformations": [
				{
					"name": "SelectColunas"
				},
				{
					"name": "FiltraIgnorado"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Cod_IBGE as integer,",
				"          {Grande região} as string,",
				"          {Município} as string,",
				"          {Mun_Total de casos} as integer,",
				"          {Mun_Total de óbitos} as integer,",
				"          {_c5} as string,",
				"          {_c6} as string,",
				"          {_c7} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MunicpiosIBGE",
				"MunicpiosIBGE select(mapColumn(",
				"          Cod_IBGE,",
				"          Municipio = {Município},",
				"          Total_De_Casos = {Mun_Total de casos},",
				"          Total_De_Obitos = {Mun_Total de óbitos}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColunas",
				"SelectColunas filter(Municipio != 'Ignorado' && not(isNull(Cod_IBGE))) ~> FiltraIgnorado",
				"FiltraIgnorado sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['TRUNCATE TABLE dbo.Municipios;'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkToDatabase"
			]
		}
	}
}